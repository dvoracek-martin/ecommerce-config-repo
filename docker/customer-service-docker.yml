server:
  port: 8083
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/
    registerWithEureka: true
    fetchRegistry: true
  instance:
    preferIpAddress: true

spring:
  application:
    name: customer-service
  datasource:
    url: jdbc:postgresql://user-service-postgres-db:5432/customer_db
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver
    jpa:
      hibernate:
        ddl-auto: update
      show-sql: true
      database-platform: org.hibernate.dialect.PostgreSQLDialect
    security:
      oauth2:
        resourceserver:
          jwt:
            issuer-uri: http://keycloak-service:9090/realms/ecommerce-platform
            jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  kafka:
    bootstrap-servers: kafka-service:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    info:
      enabled: true

springdoc:
  api-docs:
    enabled: true
    path: /api/customer/v3/api-docs
  swagger-ui:
    enabled: true
    path: /api/customer/swagger-ui.html

kafka:
  topic:
    userCreated: user_created_topic
